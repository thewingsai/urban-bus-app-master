name: Deploy to Hostinger via SSH

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup SSH access (key or password)
        shell: bash
        run: |
          mkdir -p ~/.ssh
          SSH_PORT_SAFE=${SSH_PORT:-22}
          ssh-keyscan -p "$SSH_PORT_SAFE" "$SSH_HOST" >> ~/.ssh/known_hosts
          if [ -n "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            echo "SSH_CMD=ssh -i ~/.ssh/id_rsa -p $SSH_PORT_SAFE -o StrictHostKeyChecking=yes" >> $GITHUB_ENV
            echo "RSYNC_SSH=ssh -i ~/.ssh/id_rsa -p $SSH_PORT_SAFE -o StrictHostKeyChecking=yes" >> $GITHUB_ENV
          else
            sudo apt-get update -y
            sudo apt-get install -y sshpass
            echo "SSH_CMD=sshpass -p '$SSH_PASSWORD' ssh -p $SSH_PORT_SAFE -o StrictHostKeyChecking=yes" >> $GITHUB_ENV
            echo "RSYNC_SSH=sshpass -p '$SSH_PASSWORD' ssh -p $SSH_PORT_SAFE -o StrictHostKeyChecking=yes" >> $GITHUB_ENV
          fi

      - name: Ensure remote deploy path exists
        if: env.DEPLOY_PATH != ''
        shell: bash
        run: |
          $SSH_CMD "$SSH_USERNAME@$SSH_HOST" "mkdir -p '$DEPLOY_PATH' '$DEPLOY_PATH/api'"

      - name: Deploy frontend (dist) via rsync
        shell: bash
        run: |
          rsync -az --delete -e "$RSYNC_SSH" dist/ "$SSH_USERNAME@$SSH_HOST:$DEPLOY_PATH/"

      - name: Deploy API folder if present
        shell: bash
        run: |
          if [ -d api ]; then
            rsync -az -e "$RSYNC_SSH" api/ "$SSH_USERNAME@$SSH_HOST:$DEPLOY_PATH/api/"
          fi

      - name: Deploy root PHP utilities if present
        shell: bash
        run: |
          shopt -s nullglob
          PHP_FILES=( *.php )
          if [ ${#PHP_FILES[@]} -gt 0 ]; then
            rsync -az -e "$RSYNC_SSH" "${PHP_FILES[@]}" "$SSH_USERNAME@$SSH_HOST:$DEPLOY_PATH/"
          fi

      - name: Upload .env to server (optional)
        if: ${{ secrets.ENV_PRODUCTION != '' }}
        shell: bash
        run: |
          printf "%s" "${{ secrets.ENV_PRODUCTION }}" | $SSH_CMD "$SSH_USERNAME@$SSH_HOST" "cat > '$DEPLOY_PATH/.env'"

      - name: Verify deployment contents on server
        shell: bash
        run: |
          $SSH_CMD "$SSH_USERNAME@$SSH_HOST" "set -e; echo 'Listing $DEPLOY_PATH:'; ls -la '$DEPLOY_PATH' | tail -n 50; echo 'Disk usage:'; du -sh '$DEPLOY_PATH' || true"

      - name: Try to reload web server (best effort)
        shell: bash
        run: |
          $SSH_CMD "$SSH_USERNAME@$SSH_HOST" "set -e; if command -v systemctl >/dev/null 2>&1; then sudo systemctl reload nginx 2>/dev/null || sudo systemctl reload apache2 2>/dev/null || true; else sudo service nginx reload 2>/dev/null || sudo service apache2 reload 2>/dev/null || true; fi"
